# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class AstronomyTable(models.Model):
    astronomy_id = models.AutoField(primary_key=True)
    date = models.DateField(blank=True, null=True)
    beach = models.ForeignKey('BeachTable', models.DO_NOTHING, blank=True, null=True)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    beach_municipality = models.TextField(blank=True, null=True)
    astronomicaldawn = models.TextField(blank=True, null=True)
    astronomicaldusk = models.TextField(blank=True, null=True)
    civildawn = models.TextField(blank=True, null=True)
    civildusk = models.TextField(blank=True, null=True)
    moonfraction = models.FloatField(blank=True, null=True)
    moonrise = models.TextField(blank=True, null=True)
    moonset = models.TextField(blank=True, null=True)
    nauticaldawn = models.TextField(blank=True, null=True)
    nauticaldusk = models.TextField(blank=True, null=True)
    sunrise = models.TextField(blank=True, null=True)
    sunset = models.TextField(blank=True, null=True)
    time = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'astronomy_table'


class BeachTable(models.Model):
    beach_id = models.AutoField(primary_key=True)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    beach_municipality = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'beach_table'


class ExtremesHeightTable(models.Model):
    extremes_height_id = models.AutoField(primary_key=True)
    date = models.DateField(blank=True, null=True)
    beach = models.ForeignKey(BeachTable, models.DO_NOTHING)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    timestamp = models.IntegerField(blank=True, null=True)
    datetime = models.TextField(blank=True, null=True)
    height = models.FloatField(blank=True, null=True)
    state = models.TextField(blank=True, null=True)
    date_beach_name = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'extremes_height_table'


class HistoricSharkIncidentWeatherTideTable(models.Model):
    historic_shark_incident_weather_tide_id = models.AutoField(primary_key=True)
    index = models.IntegerField(blank=True, null=True)
    case_date = models.TextField(blank=True, null=True)
    date_location = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    place_id = models.TextField(blank=True, null=True)
    postal_code = models.TextField(blank=True, null=True)
    location_type = models.TextField(blank=True, null=True)
    address = models.TextField(blank=True, null=True)
    area = models.TextField(blank=True, null=True)
    location = models.TextField(blank=True, null=True)
    name = models.TextField(blank=True, null=True)
    age = models.TextField(blank=True, null=True)
    gender = models.TextField(blank=True, null=True)
    type = models.TextField(blank=True, null=True)
    activity = models.TextField(blank=True, null=True)
    time = models.TextField(blank=True, null=True)
    species = models.TextField(blank=True, null=True)
    injury = models.TextField(blank=True, null=True)
    fatal = models.TextField(blank=True, null=True)
    temperature_max = models.FloatField(blank=True, null=True)
    temperature_min = models.FloatField(blank=True, null=True)
    temperature_mean = models.FloatField(blank=True, null=True)
    temperature_median = models.FloatField(blank=True, null=True)
    temperature_std = models.FloatField(blank=True, null=True)
    temperature_var = models.FloatField(blank=True, null=True)
    temperature_sem = models.FloatField(blank=True, null=True)
    apparenttemperature_max = models.FloatField(blank=True, null=True)
    apparenttemperature_min = models.FloatField(blank=True, null=True)
    apparenttemperature_mean = models.FloatField(blank=True, null=True)
    apparenttemperature_median = models.FloatField(blank=True, null=True)
    apparenttemperature_std = models.FloatField(blank=True, null=True)
    apparenttemperature_var = models.FloatField(blank=True, null=True)
    apparenttemperature_sem = models.FloatField(blank=True, null=True)
    dewpoint_max = models.FloatField(blank=True, null=True)
    dewpoint_min = models.FloatField(blank=True, null=True)
    dewpoint_mean = models.FloatField(blank=True, null=True)
    dewpoint_median = models.FloatField(blank=True, null=True)
    dewpoint_std = models.FloatField(blank=True, null=True)
    dewpoint_var = models.FloatField(blank=True, null=True)
    dewpoint_sem = models.FloatField(blank=True, null=True)
    humidity_max = models.FloatField(blank=True, null=True)
    humidity_min = models.FloatField(blank=True, null=True)
    humidity_mean = models.FloatField(blank=True, null=True)
    humidity_median = models.FloatField(blank=True, null=True)
    humidity_std = models.FloatField(blank=True, null=True)
    humidity_var = models.FloatField(blank=True, null=True)
    humidity_sem = models.FloatField(blank=True, null=True)
    windspeed_max = models.FloatField(blank=True, null=True)
    windspeed_min = models.FloatField(blank=True, null=True)
    windspeed_mean = models.FloatField(blank=True, null=True)
    windspeed_median = models.FloatField(blank=True, null=True)
    windspeed_std = models.FloatField(blank=True, null=True)
    windspeed_var = models.FloatField(blank=True, null=True)
    windspeed_sem = models.FloatField(blank=True, null=True)
    windbearing_max = models.FloatField(blank=True, null=True)
    windbearing_min = models.FloatField(blank=True, null=True)
    windbearing_mean = models.FloatField(blank=True, null=True)
    windbearing_median = models.FloatField(blank=True, null=True)
    windbearing_std = models.FloatField(blank=True, null=True)
    windbearing_var = models.FloatField(blank=True, null=True)
    windbearing_sem = models.FloatField(blank=True, null=True)
    uvindex_max = models.FloatField(blank=True, null=True)
    uvindex_min = models.FloatField(blank=True, null=True)
    uvindex_mean = models.FloatField(blank=True, null=True)
    uvindex_median = models.FloatField(blank=True, null=True)
    uvindex_std = models.FloatField(blank=True, null=True)
    uvindex_var = models.FloatField(blank=True, null=True)
    uvindex_sem = models.FloatField(blank=True, null=True)
    cloudcover_max = models.FloatField(blank=True, null=True)
    cloudcover_min = models.FloatField(blank=True, null=True)
    cloudcover_mean = models.FloatField(blank=True, null=True)
    cloudcover_median = models.FloatField(blank=True, null=True)
    cloudcover_std = models.FloatField(blank=True, null=True)
    cloudcover_var = models.FloatField(blank=True, null=True)
    cloudcover_sem = models.FloatField(blank=True, null=True)
    month = models.TextField(blank=True, null=True)
    month_day = models.TextField(blank=True, null=True)
    season = models.TextField(blank=True, null=True)
    target_fatal = models.FloatField(blank=True, null=True)
    height_fall_max = models.FloatField(blank=True, null=True)
    height_fall_min = models.FloatField(blank=True, null=True)
    height_fall_mean = models.FloatField(blank=True, null=True)
    height_fall_median = models.FloatField(blank=True, null=True)
    height_fall_std = models.FloatField(blank=True, null=True)
    height_fall_var = models.FloatField(blank=True, null=True)
    height_fall_sem = models.FloatField(blank=True, null=True)
    height_rise_max = models.FloatField(blank=True, null=True)
    height_rise_min = models.FloatField(blank=True, null=True)
    height_rise_mean = models.FloatField(blank=True, null=True)
    height_rise_median = models.FloatField(blank=True, null=True)
    height_rise_std = models.FloatField(blank=True, null=True)
    height_rise_var = models.FloatField(blank=True, null=True)
    height_rise_sem = models.FloatField(blank=True, null=True)
    height_high_tide_max = models.FloatField(blank=True, null=True)
    height_high_tide_min = models.FloatField(blank=True, null=True)
    height_high_tide_mean = models.FloatField(blank=True, null=True)
    height_low_tide_max = models.FloatField(blank=True, null=True)
    height_low_tide_min = models.FloatField(blank=True, null=True)
    height_low_tide_mean = models.FloatField(blank=True, null=True)
    lat_datum_mean = models.FloatField(blank=True, null=True)
    hat_datum_mean = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'historic_shark_incident_weather_tide_table'


class HospitalServicesTable(models.Model):
    hospital_services_id = models.AutoField(primary_key=True)
    hospital = models.ForeignKey('HospitalTable', models.DO_NOTHING, blank=True, null=True)
    services = models.ForeignKey('ServicesTable', models.DO_NOTHING, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hospital_services_table'


class HospitalTable(models.Model):
    hospital_id = models.AutoField(primary_key=True)
    hospital_name = models.TextField(blank=True, null=True)
    hospital_address = models.TextField(blank=True, null=True)
    state = models.TextField(blank=True, null=True)
    peer_group = models.TextField(blank=True, null=True)
    hospital_type = models.TextField(blank=True, null=True)
    interval = models.TextField(blank=True, null=True)
    time_period = models.TextField(blank=True, null=True)
    resuscitation_cohort_percent_patient_seen_on_time = models.FloatField(blank=True, null=True)
    emergency_cohort_percent_patient_seen_on_time = models.FloatField(blank=True, null=True)
    urgent_cohort_percent_patient_seen_on_time = models.FloatField(blank=True, null=True)
    semi_urgent_cohort_percent_patient_seen_on_time = models.FloatField(blank=True, null=True)
    non_urgent_cohort_percent_patient_seen_on_time = models.FloatField(blank=True, null=True)
    hospital_latitude = models.FloatField(blank=True, null=True)
    hospital_longitude = models.FloatField(blank=True, null=True)
    hospital_location_type = models.TextField(blank=True, null=True)
    hospital_postal_code = models.TextField(blank=True, null=True)
    hospital_formatted_address = models.TextField(blank=True, null=True)
    hospital_place_id = models.TextField(blank=True, null=True)
    business_status = models.TextField(blank=True, null=True)
    icon_url = models.TextField(blank=True, null=True)
    international_phone_number = models.TextField(blank=True, null=True)
    opening_hours_weekday_text = models.TextField(blank=True, null=True)
    rating = models.FloatField(blank=True, null=True)
    geo_url = models.TextField(blank=True, null=True)
    user_ratings_total = models.FloatField(blank=True, null=True)
    utc_offset = models.FloatField(blank=True, null=True)
    vicinity = models.TextField(blank=True, null=True)
    website_url = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'hospital_table'


class NewsTable(models.Model):
    astronomy_id = models.AutoField(primary_key=True)
    date = models.DateField(blank=True, null=True)
    news_topic = models.TextField(blank=True, null=True)
    source = models.TextField(blank=True, null=True)
    author = models.TextField(blank=True, null=True)
    title = models.TextField(blank=True, null=True)
    description = models.TextField(blank=True, null=True)
    url = models.TextField(blank=True, null=True)
    urltoimage = models.TextField(blank=True, null=True)
    publishedat = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'news_table'


class SeaWaterQualityTable(models.Model):
    sea_water_quality_id = models.AutoField(primary_key=True)
    date = models.DateField(blank=True, null=True)
    beach = models.ForeignKey(BeachTable, models.DO_NOTHING, blank=True, null=True)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    beach_municipality = models.TextField(blank=True, null=True)
    chlorophyll = models.FloatField(blank=True, null=True)
    iron = models.FloatField(blank=True, null=True)
    nitrate = models.FloatField(blank=True, null=True)
    oxygen = models.FloatField(blank=True, null=True)
    ph = models.FloatField(blank=True, null=True)
    phosphate = models.FloatField(blank=True, null=True)
    phyto = models.FloatField(blank=True, null=True)
    phytoplankton = models.FloatField(blank=True, null=True)
    salinity = models.FloatField(blank=True, null=True)
    silicate = models.FloatField(blank=True, null=True)
    time = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'sea_water_quality_table'


class ServicesTable(models.Model):
    services_id = models.AutoField(primary_key=True)
    services = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'services_table'


class SharkIncidentTable(models.Model):
    shark_incident_id = models.AutoField(primary_key=True)
    case_date = models.TextField(blank=True, null=True)
    date_location = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    place_id = models.TextField(blank=True, null=True)
    postal_code = models.TextField(blank=True, null=True)
    location_type = models.TextField(blank=True, null=True)
    address = models.TextField(blank=True, null=True)
    area = models.TextField(blank=True, null=True)
    location = models.TextField(blank=True, null=True)
    name = models.TextField(blank=True, null=True)
    age = models.TextField(blank=True, null=True)
    gender = models.TextField(blank=True, null=True)
    type = models.TextField(blank=True, null=True)
    activity = models.TextField(blank=True, null=True)
    time = models.TextField(blank=True, null=True)
    species = models.TextField(blank=True, null=True)
    injury = models.TextField(blank=True, null=True)
    fatal = models.TextField(blank=True, null=True)
    temperature_max = models.FloatField(blank=True, null=True)
    temperature_min = models.FloatField(blank=True, null=True)
    temperature_mean = models.FloatField(blank=True, null=True)
    temperature_median = models.FloatField(blank=True, null=True)
    temperature_std = models.FloatField(blank=True, null=True)
    temperature_var = models.FloatField(blank=True, null=True)
    temperature_sem = models.FloatField(blank=True, null=True)
    apparenttemperature_max = models.FloatField(blank=True, null=True)
    apparenttemperature_min = models.FloatField(blank=True, null=True)
    apparenttemperature_mean = models.FloatField(blank=True, null=True)
    apparenttemperature_median = models.FloatField(blank=True, null=True)
    apparenttemperature_std = models.FloatField(blank=True, null=True)
    apparenttemperature_var = models.FloatField(blank=True, null=True)
    apparenttemperature_sem = models.FloatField(blank=True, null=True)
    dewpoint_max = models.FloatField(blank=True, null=True)
    dewpoint_min = models.FloatField(blank=True, null=True)
    dewpoint_mean = models.FloatField(blank=True, null=True)
    dewpoint_median = models.FloatField(blank=True, null=True)
    dewpoint_std = models.FloatField(blank=True, null=True)
    dewpoint_var = models.FloatField(blank=True, null=True)
    dewpoint_sem = models.FloatField(blank=True, null=True)
    humidity_max = models.FloatField(blank=True, null=True)
    humidity_min = models.FloatField(blank=True, null=True)
    humidity_mean = models.FloatField(blank=True, null=True)
    humidity_median = models.FloatField(blank=True, null=True)
    humidity_std = models.FloatField(blank=True, null=True)
    humidity_var = models.FloatField(blank=True, null=True)
    humidity_sem = models.FloatField(blank=True, null=True)
    windspeed_max = models.FloatField(blank=True, null=True)
    windspeed_min = models.FloatField(blank=True, null=True)
    windspeed_mean = models.FloatField(blank=True, null=True)
    windspeed_median = models.FloatField(blank=True, null=True)
    windspeed_std = models.FloatField(blank=True, null=True)
    windspeed_var = models.FloatField(blank=True, null=True)
    windspeed_sem = models.FloatField(blank=True, null=True)
    windbearing_max = models.FloatField(blank=True, null=True)
    windbearing_min = models.FloatField(blank=True, null=True)
    windbearing_mean = models.FloatField(blank=True, null=True)
    windbearing_median = models.FloatField(blank=True, null=True)
    windbearing_std = models.FloatField(blank=True, null=True)
    windbearing_var = models.FloatField(blank=True, null=True)
    windbearing_sem = models.FloatField(blank=True, null=True)
    uvindex_max = models.FloatField(blank=True, null=True)
    uvindex_min = models.FloatField(blank=True, null=True)
    uvindex_mean = models.FloatField(blank=True, null=True)
    uvindex_median = models.FloatField(blank=True, null=True)
    uvindex_std = models.FloatField(blank=True, null=True)
    uvindex_var = models.FloatField(blank=True, null=True)
    uvindex_sem = models.FloatField(blank=True, null=True)
    cloudcover_max = models.FloatField(blank=True, null=True)
    cloudcover_min = models.FloatField(blank=True, null=True)
    cloudcover_mean = models.FloatField(blank=True, null=True)
    cloudcover_median = models.FloatField(blank=True, null=True)
    cloudcover_std = models.FloatField(blank=True, null=True)
    cloudcover_var = models.FloatField(blank=True, null=True)
    cloudcover_sem = models.FloatField(blank=True, null=True)
    month = models.TextField(blank=True, null=True)
    month_day = models.TextField(blank=True, null=True)
    season = models.TextField(blank=True, null=True)
    target_fatal = models.FloatField(blank=True, null=True)
    height_fall_max = models.FloatField(blank=True, null=True)
    height_fall_min = models.FloatField(blank=True, null=True)
    height_fall_mean = models.FloatField(blank=True, null=True)
    height_fall_median = models.FloatField(blank=True, null=True)
    height_fall_std = models.FloatField(blank=True, null=True)
    height_fall_var = models.FloatField(blank=True, null=True)
    height_fall_sem = models.FloatField(blank=True, null=True)
    height_rise_max = models.FloatField(blank=True, null=True)
    height_rise_min = models.FloatField(blank=True, null=True)
    height_rise_mean = models.FloatField(blank=True, null=True)
    height_rise_median = models.FloatField(blank=True, null=True)
    height_rise_std = models.FloatField(blank=True, null=True)
    height_rise_var = models.FloatField(blank=True, null=True)
    height_rise_sem = models.FloatField(blank=True, null=True)
    height_high_tide_max = models.FloatField(blank=True, null=True)
    height_high_tide_min = models.FloatField(blank=True, null=True)
    height_high_tide_mean = models.FloatField(blank=True, null=True)
    height_low_tide_max = models.FloatField(blank=True, null=True)
    height_low_tide_min = models.FloatField(blank=True, null=True)
    height_low_tide_mean = models.FloatField(blank=True, null=True)
    lat_datum_mean = models.FloatField(blank=True, null=True)
    hat_datum_mean = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'shark_incident_table'


class SharkPredictionTable(models.Model):
    shark_prediction_id = models.AutoField(primary_key=True)
    date_beach_name = models.TextField(blank=True, null=True)
    temperature_max = models.FloatField(blank=True, null=True)
    temperature_min = models.FloatField(blank=True, null=True)
    temperature_mean = models.FloatField(blank=True, null=True)
    temperature_median = models.FloatField(blank=True, null=True)
    temperature_std = models.FloatField(blank=True, null=True)
    temperature_var = models.FloatField(blank=True, null=True)
    temperature_sem = models.FloatField(blank=True, null=True)
    apparenttemperature_max = models.FloatField(blank=True, null=True)
    apparenttemperature_min = models.FloatField(blank=True, null=True)
    apparenttemperature_mean = models.FloatField(blank=True, null=True)
    apparenttemperature_median = models.FloatField(blank=True, null=True)
    apparenttemperature_std = models.FloatField(blank=True, null=True)
    apparenttemperature_var = models.FloatField(blank=True, null=True)
    apparenttemperature_sem = models.FloatField(blank=True, null=True)
    dewpoint_max = models.FloatField(blank=True, null=True)
    dewpoint_min = models.FloatField(blank=True, null=True)
    dewpoint_mean = models.FloatField(blank=True, null=True)
    dewpoint_median = models.FloatField(blank=True, null=True)
    dewpoint_std = models.FloatField(blank=True, null=True)
    dewpoint_var = models.FloatField(blank=True, null=True)
    dewpoint_sem = models.FloatField(blank=True, null=True)
    humidity_max = models.FloatField(blank=True, null=True)
    humidity_min = models.FloatField(blank=True, null=True)
    humidity_mean = models.FloatField(blank=True, null=True)
    humidity_median = models.FloatField(blank=True, null=True)
    humidity_std = models.FloatField(blank=True, null=True)
    humidity_var = models.FloatField(blank=True, null=True)
    humidity_sem = models.FloatField(blank=True, null=True)
    windspeed_max = models.FloatField(blank=True, null=True)
    windspeed_min = models.FloatField(blank=True, null=True)
    windspeed_mean = models.FloatField(blank=True, null=True)
    windspeed_median = models.FloatField(blank=True, null=True)
    windspeed_std = models.FloatField(blank=True, null=True)
    windspeed_var = models.FloatField(blank=True, null=True)
    windspeed_sem = models.FloatField(blank=True, null=True)
    windbearing_max = models.FloatField(blank=True, null=True)
    windbearing_min = models.FloatField(blank=True, null=True)
    windbearing_mean = models.FloatField(blank=True, null=True)
    windbearing_median = models.FloatField(blank=True, null=True)
    windbearing_std = models.FloatField(blank=True, null=True)
    windbearing_var = models.FloatField(blank=True, null=True)
    windbearing_sem = models.FloatField(blank=True, null=True)
    uvindex_max = models.FloatField(blank=True, null=True)
    uvindex_min = models.FloatField(blank=True, null=True)
    uvindex_mean = models.FloatField(blank=True, null=True)
    uvindex_median = models.FloatField(blank=True, null=True)
    uvindex_std = models.FloatField(blank=True, null=True)
    uvindex_var = models.FloatField(blank=True, null=True)
    uvindex_sem = models.FloatField(blank=True, null=True)
    cloudcover_max = models.FloatField(blank=True, null=True)
    cloudcover_min = models.FloatField(blank=True, null=True)
    cloudcover_mean = models.FloatField(blank=True, null=True)
    cloudcover_median = models.FloatField(blank=True, null=True)
    cloudcover_std = models.FloatField(blank=True, null=True)
    cloudcover_var = models.FloatField(blank=True, null=True)
    cloudcover_sem = models.FloatField(blank=True, null=True)
    date = models.DateField(blank=True, null=True)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    height_rise_max = models.FloatField(blank=True, null=True)
    height_rise_min = models.FloatField(blank=True, null=True)
    height_rise_mean = models.FloatField(blank=True, null=True)
    height_rise_median = models.FloatField(blank=True, null=True)
    height_rise_std = models.FloatField(blank=True, null=True)
    height_rise_var = models.FloatField(blank=True, null=True)
    height_rise_sem = models.FloatField(blank=True, null=True)
    beach = models.ForeignKey(BeachTable, models.DO_NOTHING, blank=True, null=True)
    height_fall_max = models.FloatField(blank=True, null=True)
    height_fall_min = models.FloatField(blank=True, null=True)
    height_fall_mean = models.FloatField(blank=True, null=True)
    height_fall_median = models.FloatField(blank=True, null=True)
    height_fall_std = models.FloatField(blank=True, null=True)
    height_fall_var = models.FloatField(blank=True, null=True)
    height_fall_sem = models.FloatField(blank=True, null=True)
    height_high_tide_max = models.FloatField(blank=True, null=True)
    height_high_tide_min = models.FloatField(blank=True, null=True)
    height_high_tide_mean = models.FloatField(blank=True, null=True)
    height_low_tide_max = models.FloatField(blank=True, null=True)
    height_low_tide_min = models.FloatField(blank=True, null=True)
    height_low_tide_mean = models.FloatField(blank=True, null=True)
    month = models.TextField(blank=True, null=True)
    season = models.TextField(blank=True, null=True)
    month_day = models.TextField(blank=True, null=True)
    shark_attack_percentage = models.FloatField(blank=True, null=True)
    shark_sighting_percentage = models.FloatField(blank=True, null=True)
    shark_sighting_level = models.TextField(blank=True, null=True)
    shark_attack_level = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'shark_prediction_table'


class SwellTable(models.Model):
    swell_id = models.AutoField(primary_key=True)
    date = models.DateField(blank=True, null=True)
    beach = models.ForeignKey(BeachTable, models.DO_NOTHING, blank=True, null=True)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    beach_municipality = models.TextField(blank=True, null=True)
    airtemperature = models.FloatField(blank=True, null=True)
    cloudcover = models.FloatField(blank=True, null=True)
    currentdirection = models.FloatField(blank=True, null=True)
    currentspeed = models.FloatField(blank=True, null=True)
    gust = models.FloatField(blank=True, null=True)
    humidity = models.FloatField(blank=True, null=True)
    precipitation = models.FloatField(blank=True, null=True)
    pressure = models.FloatField(blank=True, null=True)
    sealevel = models.FloatField(blank=True, null=True)
    secondaryswelldirection = models.FloatField(blank=True, null=True)
    secondaryswellheight = models.FloatField(blank=True, null=True)
    secondaryswellperiod = models.FloatField(blank=True, null=True)
    swelldirection = models.FloatField(blank=True, null=True)
    swellheight = models.FloatField(blank=True, null=True)
    swellperiod = models.FloatField(blank=True, null=True)
    time = models.TextField(blank=True, null=True)
    visibility = models.FloatField(blank=True, null=True)
    watertemperature = models.FloatField(blank=True, null=True)
    wavedirection = models.FloatField(blank=True, null=True)
    waveheight = models.FloatField(blank=True, null=True)
    waveperiod = models.FloatField(blank=True, null=True)
    winddirection = models.FloatField(blank=True, null=True)
    windspeed = models.FloatField(blank=True, null=True)
    windwavedirection = models.FloatField(blank=True, null=True)
    windwaveheight = models.FloatField(blank=True, null=True)
    windwaveperiod = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'swell_table'


class TideHeightTable(models.Model):
    tide_height_id = models.AutoField(primary_key=True)
    date = models.DateField(blank=True, null=True)
    beach = models.ForeignKey(BeachTable, models.DO_NOTHING)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    timestamp = models.IntegerField(blank=True, null=True)
    datetime = models.TextField(blank=True, null=True)
    height = models.FloatField(blank=True, null=True)
    state = models.TextField(blank=True, null=True)
    origin_distance = models.FloatField(blank=True, null=True)
    origin_distance_unit = models.TextField(blank=True, null=True)
    origin_latitude = models.FloatField(blank=True, null=True)
    origin_longitude = models.FloatField(blank=True, null=True)
    timezone = models.TextField(blank=True, null=True)
    date_beach_name = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tide_height_table'


class WeatherTable(models.Model):
    weather_id = models.AutoField(primary_key=True)
    date = models.DateField(blank=True, null=True)
    beach = models.ForeignKey(BeachTable, models.DO_NOTHING)
    beach_name = models.TextField(blank=True, null=True)
    beach_latitude = models.FloatField(blank=True, null=True)
    beach_longitude = models.FloatField(blank=True, null=True)
    beach_state = models.TextField(blank=True, null=True)
    time = models.FloatField(blank=True, null=True)
    summary = models.TextField(blank=True, null=True)
    icon = models.TextField(blank=True, null=True)
    precipintensity = models.FloatField(blank=True, null=True)
    precipprobability = models.FloatField(blank=True, null=True)
    temperature = models.FloatField(blank=True, null=True)
    apparenttemperature = models.FloatField(blank=True, null=True)
    dewpoint = models.FloatField(blank=True, null=True)
    humidity = models.FloatField(blank=True, null=True)
    pressure = models.FloatField(blank=True, null=True)
    windspeed = models.FloatField(blank=True, null=True)
    windgust = models.FloatField(blank=True, null=True)
    windbearing = models.FloatField(blank=True, null=True)
    cloudcover = models.FloatField(blank=True, null=True)
    uvindex = models.FloatField(blank=True, null=True)
    visibility = models.FloatField(blank=True, null=True)
    ozone = models.FloatField(blank=True, null=True)
    nearest_station = models.FloatField(blank=True, null=True)
    time_offset = models.FloatField(blank=True, null=True)
    preciptype = models.TextField(blank=True, null=True)
    sources = models.TextField(blank=True, null=True)
    datetime = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'weather_table'
